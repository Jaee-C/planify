generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Project {
  id              Int             @id @default(autoincrement())
  name            String
  key             String
  description     String?
  ownerId         Int
  numIssues       Int             @default(0)
  organisationKey String
  issues          Issue[]
  owner           User            @relation(fields: [ownerId], references: [id])
  members         ProjectMember[]
  organisation    Organisation    @relation(fields: [organisationKey], references: [key])

  @@unique([key, organisationKey])
}

model Organisation {
  id          Int       @id @default(autoincrement())
  key         String    @unique
  name        String
  description String?
  projects    Project[]
  users       OrganisationUser[]
}

model Issue {
  id          Int
  title       String
  description Bytes?
  statusId    Int
  projectId   Int
  priorityId  Int?
  boardOrder  String?
  status      StatusType    @relation(fields: [statusId], references: [id])
  project     Project       @relation(fields: [projectId], references: [id])
  priority    PriorityType? @relation(fields: [priorityId], references: [id])

  @@id([id, projectId])
}

model User {
  id            Int             @id @default(autoincrement())
  firstName     String?
  lastName      String?
  email         String          @unique
  displayName   String?
  password      String
  ownedProjects Project[]
  projects      ProjectMember[]
  organisations OrganisationUser[]
}

model StatusType {
  id     Int     @id @default(autoincrement())
  name   String
  issues Issue[]
}

model PriorityType {
  id     Int     @id @default(autoincrement())
  name   String
  issues Issue[]
}

model ProjectMember {
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
}

model OrganisationUser {
  organisationKey    String
  organisation       Organisation @relation(fields: [organisationKey], references: [key])
  userId             Int
  user               User @relation(fields: [userId], references: [id])
  role               String

  @@id([organisationKey, userId])
}
